{
  "cacheItemsMap": {
    "2022.md": {
      "document": {
        "title": "Last year in action",
        "date": "2021-12-24T00:00:00.000Z",
        "excerpt": "Testing some stuff out!",
        "slug": "2022",
        "body": {
          "raw": "\n**Happy new year!** What better way to start 2023 than to celebrate the work the Developer Experience teams accomplished in 2022:\n\n- Our monthly active community members **grew by 66%**, as measured by activity on Twitter, Discord, GitHub, and more. Our teams play a key role in helping grow, educate, and interact with members of the community. We even helped [many folks land jobs](https://twitter.com/nutlope/status/1512462016614703115) from our [Next.js job board](https://github.com/vercel/next.js/discussions/43787).\n- We helped engage and answer questions from the community, resulting in [Discord](https://nextjs.org/discord) **growing 2x in size**, Reddit ([/r/nextjs](https://www.reddit.com/r/nextjs/)) **growing 3x in size**, and Next.js being one of the [top tags on StackOverflow](https://twitter.com/rauchg/status/1605997497976885248) with **96% growth**. This is largely a reverse kudos to the Next.js team!\n- The DevRel team hosted community meetups in [New York](https://twitter.com/jaredpalmer/status/1509384199899332611), [Austin](https://twitter.com/leeerob/status/1531695305766445056), and [San Francisco](https://twitter.com/nutlope/status/1542927703166181377). We also spoke at 15 events, meeting with thousands of developers across the frontend community.\n- It was a company wide effort, but we played a major part in Next.js Conf, which **55,000+** attended and **110,000+** registered. Delba, Lydia, and I were part of the [keynote](https://www.youtube.com/watch?v=NiknNI_0J48&list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq&index=4), Delba and I hosted the [preshow](https://www.youtube.com/watch?v=93D-XH0tNRY&list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq&index=2), Hassan helped organize and select our [28 amazing community speakers](https://www.youtube.com/playlist?list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq), and the rest of the team was involved in various other ways.\n- We supported many different product launches across Vercel, including Next.js ([v13](https://nextjs.org/blog/next-13), [v12.3](https://nextjs.org/blog/next-12-3), [v12.2](https://nextjs.org/blog/next-12-2), [v12.1](https://nextjs.org/blog/next-12-1)), [Edge Middleware](https://vercel.com/blog/vercel-edge-middleware-dynamic-at-the-speed-of-static), [Edge Functions](https://vercel.com/blog/edge-functions-generally-available), [Edge Config](https://vercel.com/blog/edge-config-public-beta), [Vercel Analytics](https://vercel.com/blog/vercel-acquires-splitbee), [Build Output API](https://vercel.com/blog/build-output-api), [Turbopack](https://vercel.com/blog/turbopack), [Vercel OG Image Generation](https://vercel.com/blog/introducing-vercel-og-image-generation-fast-dynamic-social-card-images), [Comments for Preview Deployments](https://vercel.com/blog/making-live-reviews-a-reality-enhanced-preview-experience), and more. Depending on the launch, we help out with early testing of features, providing feedback on the API, or reviewing content / messaging for the launch.\n- Our team helps write and approve content for social media. In 2022, we saw [Twitter](https://twitter.com/vercel) followers grow by **32%**, [YouTube](https://www.youtube.com/c/VercelHQ) subscribers grow by **78%** (**~1.5M views**, up 250% from last year), and [LinkedIn](https://www.linkedin.com/company/16181286/admin/) followers grow by **145%**. We can't take full credit, though, so kudos to the rest of y'all for creating products and content folks want to try and learn about.\n- Thousands of tweets and hundreds of direct messages later, we spent a considerable amount of time “digging deep” with customers to gather feedback on Vercel and Next.js and relay that feedback back to the team.\n- We launched a [brand new free Next.js course](https://twitter.com/delba_oliveira/status/1503409381081325571), teaching the foundations of React and Next.js for beginners to get started. It's been continually maintained and updated throughout the year, based on community feedback. Hard to fathom, but the Next.js `/learn` courses have had **17 million page views** in 2022. Kudos to Delba!\n- Our Vercel product documentation has had some major upgrades, including: framework-aware dynamic content, JavaScript/TypeScript toggles, improved search accuracy, a new table of contents, as well as refactoring many different pages and beginning to restructure the information architecture of the main navigation.\n- We helped update a number of webpages, including: [/blog](https://vercel.com/blog) (categories and new design), [/customers](https://vercel.com/customers) (industry pages and new design), [/help](https://vercel.com/help) (improved search and new design), [/guides](https://vercel.com/guides) (searching and filtering), [/templates](https://vercel.com/templates) (brand new, over 100+ templates), and more.\n\nAnd a few shoutouts…\n\n- **[Steph](https://twitter.com/steph_dietz_)** created a [written + video course on SvelteKit](https://vercel.com/docs/beginner-sveltekit), also helping amplify the well-received [SvelteKit 1.0 launch](https://svelte.dev/blog/announcing-sveltekit-1.0). Along the way, she also created [SvelteKit Commerce](https://vercel.com/templates/svelte/sveltekit-commerce) as part of the course – a fantastic template for folks to get started with SvelteKit 1.0. Great work, Steph!\n- **[Steven](https://twitter.com/steventey)** created the [Vercel Platforms Starter Kit](https://demo.vercel.pub/platforms-starter-kit), enabling companies of [all sizes](https://twitter.com/bdougieYO/status/1484244164908752896) to build multi-tenant applications on Vercel. [Hashnode](https://townhall.hashnode.com/powerful-and-superfast-hashnode-blogs-now-powered-by-nextjs-11-and-vercel) is now our most popular platform on Vercel, with almost 30,000 custom domains added. He believed in this template so much, he built an entire [open-source Bitly alternative](https://twitter.com/steventey/status/1572958186667233282) with it. Now that's dogfooding!\n- **[Hassan](https://twitter.com/nutlope)** built our incredible [image gallery template](https://vercel.com/templates/next.js/image-gallery-starter), used to show photos from Next.js Conf 2022. It features many nice UI touches, like images with placeholders, lazy loading, and size optimization. There's keyboard support, direct URLs (e.g.: `/p/2`) and more. The quality of this template is what we aspire to achieve with all of our examples, and Hassan managed to also uncover and relay some important product feedback back about Next.js and the image component.\n- **[Lydia](https://twitter.com/lydiahallie)** created a blog, video, and full tutorial on how to [create your own web framework](https://vercel.com/blog/build-your-own-web-framework), built on top of Vercel's [Build Output API](https://twitter.com/vercel/status/1550488364851363840). This was a very ambitious project and showcased Lydia's expertise as a creator and engineer. Her [writing](https://twitter.com/lydiahallie/status/1504459707750174722) has been [incredibly detailed](https://twitter.com/lydiahallie/status/1601247706307256323) and illustrated, with folks saying it's “[one of the best I read this year](https://twitter.com/sebastienlorber/status/1602732309232459782)”.\n- **[Delba](https://twitter.com/delba_oliveira)** has single-handedly re-written the vast majority of the Next.js documentation for the [new](https://beta.nextjs.org/docs) `app` [directory (beta) docs](https://beta.nextjs.org/docs). It's some of the best docs I've ever seen. Not only are there new overviews for fundamentals like [routing](https://beta.nextjs.org/docs/routing/fundamentals), [rendering](https://beta.nextjs.org/docs/rendering/fundamentals), and [data fetching](https://beta.nextjs.org/docs/data-fetching/fundamentals), she's also designed and added many illustrations to visualize concepts. Many of these docs built off her previous work on the [Layouts RFC](https://nextjs.org/blog/layouts-rfc).\n- **[Rich](https://twitter.com/studio_hungry)** has laid the groundwork for many future product docs improvements, including my favorite which is the framework-aware code blocks and content sections in the docs. With this, we'll be able to make strides towards customers having a preferred framework selected and remembered across Vercel, so the docs are always in the context of your favorite framework syntax. Well done!\n- **[Michael](https://twitter.com/manovotny)** joined just a few months ago to lead the DevRel team and has already shipped an incredible post on [moving from React + Express + Webpack to Next.js](https://vercel.com/blog/migrating-a-large-open-source-react-application-to-next-js-and-vercel), resulting in removing 20,000+ lines of code and 30+ dependencies. The post has been [well received](https://twitter.com/housecor/status/1609023938486575112) by the community. He's a fantastic leader and I'm thrilled to see him grow, mentor, and lead the DevRel team.\n\nIncredibly proud of everything y'all have accomplished – onward to 2023!\n",
          "html": "<p><strong>Happy new year!</strong> What better way to start 2023 than to celebrate the work the Developer Experience teams accomplished in 2022:</p>\n<ul>\n<li>Our monthly active community members <strong>grew by 66%</strong>, as measured by activity on Twitter, Discord, GitHub, and more. Our teams play a key role in helping grow, educate, and interact with members of the community. We even helped <a href=\"https://twitter.com/nutlope/status/1512462016614703115\">many folks land jobs</a> from our <a href=\"https://github.com/vercel/next.js/discussions/43787\">Next.js job board</a>.</li>\n<li>We helped engage and answer questions from the community, resulting in <a href=\"https://nextjs.org/discord\">Discord</a> <strong>growing 2x in size</strong>, Reddit (<a href=\"https://www.reddit.com/r/nextjs/\">/r/nextjs</a>) <strong>growing 3x in size</strong>, and Next.js being one of the <a href=\"https://twitter.com/rauchg/status/1605997497976885248\">top tags on StackOverflow</a> with <strong>96% growth</strong>. This is largely a reverse kudos to the Next.js team!</li>\n<li>The DevRel team hosted community meetups in <a href=\"https://twitter.com/jaredpalmer/status/1509384199899332611\">New York</a>, <a href=\"https://twitter.com/leeerob/status/1531695305766445056\">Austin</a>, and <a href=\"https://twitter.com/nutlope/status/1542927703166181377\">San Francisco</a>. We also spoke at 15 events, meeting with thousands of developers across the frontend community.</li>\n<li>It was a company wide effort, but we played a major part in Next.js Conf, which <strong>55,000+</strong> attended and <strong>110,000+</strong> registered. Delba, Lydia, and I were part of the <a href=\"https://www.youtube.com/watch?v=NiknNI_0J48&#x26;list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq&#x26;index=4\">keynote</a>, Delba and I hosted the <a href=\"https://www.youtube.com/watch?v=93D-XH0tNRY&#x26;list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq&#x26;index=2\">preshow</a>, Hassan helped organize and select our <a href=\"https://www.youtube.com/playlist?list=PLBnKlKpPeagll1CCK08EvjqgCq0C_dXZq\">28 amazing community speakers</a>, and the rest of the team was involved in various other ways.</li>\n<li>We supported many different product launches across Vercel, including Next.js (<a href=\"https://nextjs.org/blog/next-13\">v13</a>, <a href=\"https://nextjs.org/blog/next-12-3\">v12.3</a>, <a href=\"https://nextjs.org/blog/next-12-2\">v12.2</a>, <a href=\"https://nextjs.org/blog/next-12-1\">v12.1</a>), <a href=\"https://vercel.com/blog/vercel-edge-middleware-dynamic-at-the-speed-of-static\">Edge Middleware</a>, <a href=\"https://vercel.com/blog/edge-functions-generally-available\">Edge Functions</a>, <a href=\"https://vercel.com/blog/edge-config-public-beta\">Edge Config</a>, <a href=\"https://vercel.com/blog/vercel-acquires-splitbee\">Vercel Analytics</a>, <a href=\"https://vercel.com/blog/build-output-api\">Build Output API</a>, <a href=\"https://vercel.com/blog/turbopack\">Turbopack</a>, <a href=\"https://vercel.com/blog/introducing-vercel-og-image-generation-fast-dynamic-social-card-images\">Vercel OG Image Generation</a>, <a href=\"https://vercel.com/blog/making-live-reviews-a-reality-enhanced-preview-experience\">Comments for Preview Deployments</a>, and more. Depending on the launch, we help out with early testing of features, providing feedback on the API, or reviewing content / messaging for the launch.</li>\n<li>Our team helps write and approve content for social media. In 2022, we saw <a href=\"https://twitter.com/vercel\">Twitter</a> followers grow by <strong>32%</strong>, <a href=\"https://www.youtube.com/c/VercelHQ\">YouTube</a> subscribers grow by <strong>78%</strong> (<strong>~1.5M views</strong>, up 250% from last year), and <a href=\"https://www.linkedin.com/company/16181286/admin/\">LinkedIn</a> followers grow by <strong>145%</strong>. We can't take full credit, though, so kudos to the rest of y'all for creating products and content folks want to try and learn about.</li>\n<li>Thousands of tweets and hundreds of direct messages later, we spent a considerable amount of time “digging deep” with customers to gather feedback on Vercel and Next.js and relay that feedback back to the team.</li>\n<li>We launched a <a href=\"https://twitter.com/delba_oliveira/status/1503409381081325571\">brand new free Next.js course</a>, teaching the foundations of React and Next.js for beginners to get started. It's been continually maintained and updated throughout the year, based on community feedback. Hard to fathom, but the Next.js <code>/learn</code> courses have had <strong>17 million page views</strong> in 2022. Kudos to Delba!</li>\n<li>Our Vercel product documentation has had some major upgrades, including: framework-aware dynamic content, JavaScript/TypeScript toggles, improved search accuracy, a new table of contents, as well as refactoring many different pages and beginning to restructure the information architecture of the main navigation.</li>\n<li>We helped update a number of webpages, including: <a href=\"https://vercel.com/blog\">/blog</a> (categories and new design), <a href=\"https://vercel.com/customers\">/customers</a> (industry pages and new design), <a href=\"https://vercel.com/help\">/help</a> (improved search and new design), <a href=\"https://vercel.com/guides\">/guides</a> (searching and filtering), <a href=\"https://vercel.com/templates\">/templates</a> (brand new, over 100+ templates), and more.</li>\n</ul>\n<p>And a few shoutouts…</p>\n<ul>\n<li><strong><a href=\"https://twitter.com/steph_dietz_\">Steph</a></strong> created a <a href=\"https://vercel.com/docs/beginner-sveltekit\">written + video course on SvelteKit</a>, also helping amplify the well-received <a href=\"https://svelte.dev/blog/announcing-sveltekit-1.0\">SvelteKit 1.0 launch</a>. Along the way, she also created <a href=\"https://vercel.com/templates/svelte/sveltekit-commerce\">SvelteKit Commerce</a> as part of the course – a fantastic template for folks to get started with SvelteKit 1.0. Great work, Steph!</li>\n<li><strong><a href=\"https://twitter.com/steventey\">Steven</a></strong> created the <a href=\"https://demo.vercel.pub/platforms-starter-kit\">Vercel Platforms Starter Kit</a>, enabling companies of <a href=\"https://twitter.com/bdougieYO/status/1484244164908752896\">all sizes</a> to build multi-tenant applications on Vercel. <a href=\"https://townhall.hashnode.com/powerful-and-superfast-hashnode-blogs-now-powered-by-nextjs-11-and-vercel\">Hashnode</a> is now our most popular platform on Vercel, with almost 30,000 custom domains added. He believed in this template so much, he built an entire <a href=\"https://twitter.com/steventey/status/1572958186667233282\">open-source Bitly alternative</a> with it. Now that's dogfooding!</li>\n<li><strong><a href=\"https://twitter.com/nutlope\">Hassan</a></strong> built our incredible <a href=\"https://vercel.com/templates/next.js/image-gallery-starter\">image gallery template</a>, used to show photos from Next.js Conf 2022. It features many nice UI touches, like images with placeholders, lazy loading, and size optimization. There's keyboard support, direct URLs (e.g.: <code>/p/2</code>) and more. The quality of this template is what we aspire to achieve with all of our examples, and Hassan managed to also uncover and relay some important product feedback back about Next.js and the image component.</li>\n<li><strong><a href=\"https://twitter.com/lydiahallie\">Lydia</a></strong> created a blog, video, and full tutorial on how to <a href=\"https://vercel.com/blog/build-your-own-web-framework\">create your own web framework</a>, built on top of Vercel's <a href=\"https://twitter.com/vercel/status/1550488364851363840\">Build Output API</a>. This was a very ambitious project and showcased Lydia's expertise as a creator and engineer. Her <a href=\"https://twitter.com/lydiahallie/status/1504459707750174722\">writing</a> has been <a href=\"https://twitter.com/lydiahallie/status/1601247706307256323\">incredibly detailed</a> and illustrated, with folks saying it's “<a href=\"https://twitter.com/sebastienlorber/status/1602732309232459782\">one of the best I read this year</a>”.</li>\n<li><strong><a href=\"https://twitter.com/delba_oliveira\">Delba</a></strong> has single-handedly re-written the vast majority of the Next.js documentation for the <a href=\"https://beta.nextjs.org/docs\">new</a> <code>app</code> <a href=\"https://beta.nextjs.org/docs\">directory (beta) docs</a>. It's some of the best docs I've ever seen. Not only are there new overviews for fundamentals like <a href=\"https://beta.nextjs.org/docs/routing/fundamentals\">routing</a>, <a href=\"https://beta.nextjs.org/docs/rendering/fundamentals\">rendering</a>, and <a href=\"https://beta.nextjs.org/docs/data-fetching/fundamentals\">data fetching</a>, she's also designed and added many illustrations to visualize concepts. Many of these docs built off her previous work on the <a href=\"https://nextjs.org/blog/layouts-rfc\">Layouts RFC</a>.</li>\n<li><strong><a href=\"https://twitter.com/studio_hungry\">Rich</a></strong> has laid the groundwork for many future product docs improvements, including my favorite which is the framework-aware code blocks and content sections in the docs. With this, we'll be able to make strides towards customers having a preferred framework selected and remembered across Vercel, so the docs are always in the context of your favorite framework syntax. Well done!</li>\n<li><strong><a href=\"https://twitter.com/manovotny\">Michael</a></strong> joined just a few months ago to lead the DevRel team and has already shipped an incredible post on <a href=\"https://vercel.com/blog/migrating-a-large-open-source-react-application-to-next-js-and-vercel\">moving from React + Express + Webpack to Next.js</a>, resulting in removing 20,000+ lines of code and 30+ dependencies. The post has been <a href=\"https://twitter.com/housecor/status/1609023938486575112\">well received</a> by the community. He's a fantastic leader and I'm thrilled to see him grow, mentor, and lead the DevRel team.</li>\n</ul>\n<p>Incredibly proud of everything y'all have accomplished – onward to 2023!</p>"
        },
        "_id": "2022.md",
        "_raw": {
          "sourceFilePath": "2022.md",
          "sourceFileName": "2022.md",
          "sourceFileDir": ".",
          "contentType": "markdown",
          "flattenedPath": "2022"
        },
        "type": "Post",
        "url": "/posts/2022"
      },
      "documentHash": "1678478181990",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "post-01.md": {
      "document": {
        "title": "My top 5 used VS Code extensions",
        "date": "2021-12-24T00:00:00.000Z",
        "excerpt": "In this post I'll share my top 5 VSCode extensions that help me stay productive while working daily. From automating tasks to formatting your code, this extensions will help you stay on top of your game!.",
        "slug": "top-5-vscode-extensions",
        "body": {
          "raw": "\nVisual Studio Code (which is maintained by Microsoft), is one of the most **popular open source** code editors currently out there. Perhaps one of the reasons for this is the extensive ecosystem of extensions that currently exist. And while some IDEs may have the functionality that these extensions provide, the customization potential alone make it a very attractive offering for all the text editor user's.\n\nIn this brief guide, we'll go over the top 5 extensions I believe all web developers can benefit from. I'll go over what they do and how they can make your coding journey all the merrier. Let's jump right in!\n\n- [Prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n- [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)\n- [Path Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense)\n- [Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost)\n- [Quokka.js](https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode 'Quokka JS marketplace')\n\n## Prettier\n\nIf you haven't heard about it [Prettier](https://prettier.io/) is an opinionated code formatter that supports most commonly used programming languages; This allows teams to standarize code styles and save time/energy for the developers.\n\nThis extension will help you get used to setting it up and enable you things like automatically fixing formatting issues in your code, fixing the mix of single and double-quotes or an irregular use of semicolons.\n\n> Some of the supported technologies: JavaScript, TypeScript, Java, JSON, CSS, HTML, Vue, Angular, Markdown, YAML, and more.\n\n## GitLens\n\nThis extension combines the capabilities of Git and empowers them within the text editor, It allows you to learn who, why, and even when code was changed within the repository. All of this while also showing you the evolution of the codebase within the explore view\n\nIt also has other features such as:\n\n- History revision navigation.\n- Git Blame.\n- Status Bar with further information about the current Git history.\n\n## Path Intellisense\n\nThis is a very simple, yet very powerful extension. Basicall what it does, is autocomplete the path to whatevery file you're typing. _**pretty cool, huh?**_\n\n## Import Cost\n\nThis extension shows the estimated size of an import package, this in my opinion is a very powerful tool because it helps in keeping track of the size of all added dependencies. If it's too large it'll show a nice big warning in red color so you won't miss it.\n\n## Quokka.js\n\nThis extension allows you to quickly prototype code in a playground within VS Code, and while this extension has a paid version, the free one is plenty enough showing you:\n\n- Inline reporting.\n- The result of the code execution within the same line.\n- Runtime values and rich output formatting.\n\nAs you can see, we're barely scratching the surface of what customizing VS Code can look like. This flexibility is great, since it permits you to match your editor to your current needs\n",
          "html": "<p>Visual Studio Code (which is maintained by Microsoft), is one of the most <strong>popular open source</strong> code editors currently out there. Perhaps one of the reasons for this is the extensive ecosystem of extensions that currently exist. And while some IDEs may have the functionality that these extensions provide, the customization potential alone make it a very attractive offering for all the text editor user's.</p>\n<p>In this brief guide, we'll go over the top 5 extensions I believe all web developers can benefit from. I'll go over what they do and how they can make your coding journey all the merrier. Let's jump right in!</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\">Path Intellisense</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost\">Import Cost</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\" title=\"Quokka JS marketplace\">Quokka.js</a></li>\n</ul>\n<h2>Prettier</h2>\n<p>If you haven't heard about it <a href=\"https://prettier.io/\">Prettier</a> is an opinionated code formatter that supports most commonly used programming languages; This allows teams to standarize code styles and save time/energy for the developers.</p>\n<p>This extension will help you get used to setting it up and enable you things like automatically fixing formatting issues in your code, fixing the mix of single and double-quotes or an irregular use of semicolons.</p>\n<blockquote>\n<p>Some of the supported technologies: JavaScript, TypeScript, Java, JSON, CSS, HTML, Vue, Angular, Markdown, YAML, and more.</p>\n</blockquote>\n<h2>GitLens</h2>\n<p>This extension combines the capabilities of Git and empowers them within the text editor, It allows you to learn who, why, and even when code was changed within the repository. All of this while also showing you the evolution of the codebase within the explore view</p>\n<p>It also has other features such as:</p>\n<ul>\n<li>History revision navigation.</li>\n<li>Git Blame.</li>\n<li>Status Bar with further information about the current Git history.</li>\n</ul>\n<h2>Path Intellisense</h2>\n<p>This is a very simple, yet very powerful extension. Basicall what it does, is autocomplete the path to whatevery file you're typing. <em><strong>pretty cool, huh?</strong></em></p>\n<h2>Import Cost</h2>\n<p>This extension shows the estimated size of an import package, this in my opinion is a very powerful tool because it helps in keeping track of the size of all added dependencies. If it's too large it'll show a nice big warning in red color so you won't miss it.</p>\n<h2>Quokka.js</h2>\n<p>This extension allows you to quickly prototype code in a playground within VS Code, and while this extension has a paid version, the free one is plenty enough showing you:</p>\n<ul>\n<li>Inline reporting.</li>\n<li>The result of the code execution within the same line.</li>\n<li>Runtime values and rich output formatting.</li>\n</ul>\n<p>As you can see, we're barely scratching the surface of what customizing VS Code can look like. This flexibility is great, since it permits you to match your editor to your current needs</p>"
        },
        "_id": "post-01.md",
        "_raw": {
          "sourceFilePath": "post-01.md",
          "sourceFileName": "post-01.md",
          "sourceFileDir": ".",
          "contentType": "markdown",
          "flattenedPath": "post-01"
        },
        "type": "Post",
        "url": "/posts/post-01"
      },
      "documentHash": "1677706150243",
      "hasWarnings": false,
      "documentTypeName": "Post"
    },
    "post-02.md": {
      "document": {
        "title": "My top 5 used VS Code extensions version 2.0",
        "date": "2021-12-26T00:00:00.000Z",
        "excerpt": "In this post I'll share my top 5 VSCode extensions that help me stay productive while working daily. From automating tasks to formatting your code, this extensions will help you stay on top of your game! version 2.0.",
        "slug": "top-5-vscode-extensions-v2",
        "body": {
          "raw": "\nVisual Studio Code (which is maintained by Microsoft), is one of the most **popular open source** code editors currently out there. Perhaps one of the reasons for this is the extensive ecosystem of extensions that currently exist. And while some IDEs may have the functionality that these extensions provide, the customization potential alone make it a very attractive offering for all the text editor user's.\n\nIn this brief guide, we'll go over the top 5 extensions I believe all web developers can benefit from. I'll go over what they do and how they can make your coding journey all the merrier. Let's jump right in!\n\n- [Prettier](https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode)\n- [GitLens](https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens)\n- [Path Intellisense](https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense)\n- [Import Cost](https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost)\n- [Quokka.js](https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode 'Quokka JS marketplace')\n\n## Prettier\n\nIf you haven't heard about it [Prettier](https://prettier.io/) is an opinionated code formatter that supports most commonly used programming languages; This allows teams to standarize code styles and save time/energy for the developers.\n\nThis extension will help you get used to setting it up and enable you things like automatically fixing formatting issues in your code, fixing the mix of single and double-quotes or an irregular use of semicolons.\n\n> Some of the supported technologies: JavaScript, TypeScript, Java, JSON, CSS, HTML, Vue, Angular, Markdown, YAML, and more.\n\n## GitLens\n\nThis extension combines the capabilities of Git and empowers them within the text editor, It allows you to learn who, why, and even when code was changed within the repository. All of this while also showing you the evolution of the codebase within the explore view\n\nIt also has other features such as:\n\n- History revision navigation.\n- Git Blame.\n- Status Bar with further information about the current Git history.\n\n## Path Intellisense\n\nThis is a very simple, yet very powerful extension. Basicall what it does, is autocomplete the path to whatevery file you're typing. _**pretty cool, huh?**_\n\n## Import Cost\n\nThis extension shows the estimated size of an import package, this in my opinion is a very powerful tool because it helps in keeping track of the size of all added dependencies. If it's too large it'll show a nice big warning in red color so you won't miss it.\n\n## Quokka.js\n\nThis extension allows you to quickly prototype code in a playground within VS Code, and while this extension has a paid version, the free one is plenty enough showing you:\n\n- Inline reporting.\n- The result of the code execution within the same line.\n- Runtime values and rich output formatting.\n\nAs you can see, we're barely scratching the surface of what customizing VS Code can look like. This flexibility is great, since it permits you to match your editor to your current needs\n",
          "html": "<p>Visual Studio Code (which is maintained by Microsoft), is one of the most <strong>popular open source</strong> code editors currently out there. Perhaps one of the reasons for this is the extensive ecosystem of extensions that currently exist. And while some IDEs may have the functionality that these extensions provide, the customization potential alone make it a very attractive offering for all the text editor user's.</p>\n<p>In this brief guide, we'll go over the top 5 extensions I believe all web developers can benefit from. I'll go over what they do and how they can make your coding journey all the merrier. Let's jump right in!</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode\">Prettier</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense\">Path Intellisense</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=wix.vscode-import-cost\">Import Cost</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=WallabyJs.quokka-vscode\" title=\"Quokka JS marketplace\">Quokka.js</a></li>\n</ul>\n<h2>Prettier</h2>\n<p>If you haven't heard about it <a href=\"https://prettier.io/\">Prettier</a> is an opinionated code formatter that supports most commonly used programming languages; This allows teams to standarize code styles and save time/energy for the developers.</p>\n<p>This extension will help you get used to setting it up and enable you things like automatically fixing formatting issues in your code, fixing the mix of single and double-quotes or an irregular use of semicolons.</p>\n<blockquote>\n<p>Some of the supported technologies: JavaScript, TypeScript, Java, JSON, CSS, HTML, Vue, Angular, Markdown, YAML, and more.</p>\n</blockquote>\n<h2>GitLens</h2>\n<p>This extension combines the capabilities of Git and empowers them within the text editor, It allows you to learn who, why, and even when code was changed within the repository. All of this while also showing you the evolution of the codebase within the explore view</p>\n<p>It also has other features such as:</p>\n<ul>\n<li>History revision navigation.</li>\n<li>Git Blame.</li>\n<li>Status Bar with further information about the current Git history.</li>\n</ul>\n<h2>Path Intellisense</h2>\n<p>This is a very simple, yet very powerful extension. Basicall what it does, is autocomplete the path to whatevery file you're typing. <em><strong>pretty cool, huh?</strong></em></p>\n<h2>Import Cost</h2>\n<p>This extension shows the estimated size of an import package, this in my opinion is a very powerful tool because it helps in keeping track of the size of all added dependencies. If it's too large it'll show a nice big warning in red color so you won't miss it.</p>\n<h2>Quokka.js</h2>\n<p>This extension allows you to quickly prototype code in a playground within VS Code, and while this extension has a paid version, the free one is plenty enough showing you:</p>\n<ul>\n<li>Inline reporting.</li>\n<li>The result of the code execution within the same line.</li>\n<li>Runtime values and rich output formatting.</li>\n</ul>\n<p>As you can see, we're barely scratching the surface of what customizing VS Code can look like. This flexibility is great, since it permits you to match your editor to your current needs</p>"
        },
        "_id": "post-02.md",
        "_raw": {
          "sourceFilePath": "post-02.md",
          "sourceFileName": "post-02.md",
          "sourceFileDir": ".",
          "contentType": "markdown",
          "flattenedPath": "post-02"
        },
        "type": "Post",
        "url": "/posts/post-02"
      },
      "documentHash": "1678139984806",
      "hasWarnings": false,
      "documentTypeName": "Post"
    }
  }
}
